"0",""
"0","# NOTE: parallelization cuts the scoring time from ~30 seconds sequential to under 10"
"0","# this would be important if we built this into an app where you could weight and re-score MSAs"
"0",""
"0","registerDoFuture()"
"0","# plan(sequential) # equivalent to registerDoSeq"
"0","plan(multiprocess, .skip = T)"
"1",""
"0","tictoc::tic()"
"0","out <- foreach(i = 1:nrow(NON_TARGET_MAKRETS)"
"0","               , .verbose = F # set this to T if you'd like to monitor progress"
"0","               ) %dopar% {"
"0","  # i <- 1"
"0","  #message(i,"" of "", nrow(NON_WSH_MAKRETS))"
"0","  the_geoid <- NON_TARGET_MAKRETS[[i,""GEOID""]]"
"0","  row_frame <- NON_TARGET_MAKRETS_rows_replicated %>% filter(GEOID==the_geoid)"
"0","  "
"0","  export_out <- "
"0","    c(GEOID = the_geoid, "
"0","      colSums(abs(select_if(TARGET_MAKRETS, is.numeric) - "
"0","                    select_if(row_frame, is.numeric)))"
"0","      )"
"0","  export_out"
"0","    "
"0","}"
"1",""
"1",""
"1",""
"1",""
"1",""
"1",""
"1",""
"1",""
"0","all_distances <-   "
"0","  out %>% "
"0","  purrr::map({~.x %>% "
"0","      enframe() %>% "
"0","      spread(name, value)"
"0","  }) %>% "
"0","  bind_rows() %>% "
"0","  mutate_at(vars(-GEOID), as.numeric) %>% "
"0","  mutate(Total_Dist = rowSums(select_if(., is.numeric))) %>% "
"0","  left_join(msa_sf, by = ""GEOID"") %>% "
"0","  mutate(State = str_sub(MSA_NAME,start = -2, end = -1))"
"0",""
"0",""
"0","plan(sequential) # turns off background workers"
"0","tictoc::toc()"
"1","15.68 sec elapsed
"
